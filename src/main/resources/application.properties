server.port=8080
server.servlet.context-path=/spring-boot-rest

server.error.include-message=always
server.tomcat.accesslog.enabled=true

logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR

# none: The default for MySQL. No change is made to the database structure.
#update: Hibernate changes the database according to the given entity structures.
#create: Creates the database every time but does not drop it on close.
#create-drop: Creates the database and drops it when SessionFactory closes.

#You must begin with either create or update, because you do not yet have the database structure.
# After the first run, you can switch it to update or none, according to program requirements.
# Use update when you want to make some change to the database structure.
#The default for H2 and other embedded databases is create-drop. For other databases, such as MySQL, the default is none.

# It is a good security practice to, after your database is in a production state, set this to none,
# revoke all privileges from the MySQL user connected to the Spring application,
# and give the MySQL user only SELECT, UPDATE, INSERT, and DELETE. You can read more about this at the end of this guide.

spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/boot_starter?autoReconnect=true&autoReconnectForPools=true&useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=123

spring.jpa.generate-ddl=false
spring.liquibase.enabled=false
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.show-sql: true
